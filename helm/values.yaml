name: cyoda-client

registry:
  host: "REGISTRY_HOST_VAR"
  username: "REGISTRY_USERNAME_VAR"
  password: "REGISTRY_PASSWORD_VAR"
imagePullSecret:
  enabled: true

useNamespaceForIngress: false

enabled: true
imagePullSecrets: []
container:
  env:
    vars:
      ACCESS_TOKEN: "test"
      CYODA_API_KEY: "test"
      CYODA_API_SECRET: "test"
      TZ: /usr/share/zoneinfo/Europe/Berlin
      CYODA_API_URL: https://dev1.cyoda.net
      CYODA_AI_URL: https://dev1.cyoda.net/ai
      GRPC_ADDRESS: grpc-dev1.cyoda.net
      CYODA_AI_API: cyoda
      WORKFLOW_AI_API: workflow
      CONNECTION_AI_API: connection
      RANDOM_AI_API: random
      TRINO_AI_API: trino
      ENTITY_VERSION: 10004
      GRPC_PROCESSOR_TAG: 6f26b992-001c-11f0-add8-40c2ba0ac9eb
      CHAT_ID: 6f26b992-001c-11f0-add8-40c2ba0ac9eb

    extraVars: []
    configMaps: []
    secrets: []
podAnnotations: {}
host:
  name: "client.kube.cyoda.org"

health:
  liveness:
    path: /actuator/health/liveness
    initialDelaySeconds: 120
    timeoutSeconds: 5
    periodSeconds: 30
    failureThreshold: 10
  readiness:
    path: /actuator/health/readiness
    initialDelaySeconds: 120
    timeoutSeconds: 5
    periodSeconds: 30
    failureThreshold: 10
service:
  name: cyoda-client-service
  type: NodePort
  serverPort:
    port: 5000
    target: 5000
    name: http

ingress:
  enabled: true
  className: "nginx"
  annotations: {}
  path: /
  pathType: Prefix
  tls: []

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80

extraVolumeMounts: {}
extraVolumes: {}
securityContext: {}
tolerations: { }
priorityClassName: { }
serviceAccountName: { }
hostAliases: { }
affinity: { }
strategy: {}

image:
  pullPolicy: Always
  imageName: client-app
  tag: 6f26b992-001c-11f0-add8-40c2ba0ac9eb.latest
replicaCount: 1
resources:
  requests:
    memory: 1Gi
    cpu: 100m
  limits:
    memory: 2Gi
    cpu: 1000m
